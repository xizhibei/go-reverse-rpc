# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "master" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    # - name: Build
    #   run: go build -v ./...

    - name: EMQ X MQTT Broker in GitHub Actions
      # You may pin to the exact commit or the version.
      # uses: Namoshek/emqx-github-action@be650af8aba4a0bf0c8545cde38ec743c3ab1f75
      uses: Namoshek/emqx-github-action@v1
      # with:
        # EMQ X version to use
        # version: # optional, default is latest
        # Port mappings in a [host]:[container] format, delimited by spaces (example: "1883:1883 8883:8883")
        # ports: # optional, default is 1883:1883
        # Absolute path to a directory containing certificate files which can be referenced in the config (the folder is mounted under `/emqx-certs`)
        # certificates: # optional, default is
        # Absolute path to the `emqx.conf` configuration file to use
        # config: # optional, default is
        # The name of the spawned Docker container (can be used as hostname when accessed from other containers)
        # container-name: # optional, default is emqx

    - name: Test
      run: sleep 5 && go test -v ./...

  publish:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: release
    needs: build

    permissions:
      contents: write
      id-token: write

    steps:
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Generate changelog
        uses: orhun/git-cliff-action@v4
        with:
          config: cliff.toml
          args: --verbose
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_REPO: ${{ github.repository }}

      - name: Add changelog to commit and update version
        run: |
          # Create a temporary branch from the tag
          git checkout -b temp-release-branch

          git add CHANGELOG.md

          git commit -m "chore: update changelog [skip ci]"

          # Push to master branch
          git push origin temp-release-branch:master

      - name: Generate release changelog
        uses: orhun/git-cliff-action@v4
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          body: ${{ steps.git-cliff.outputs.content }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
